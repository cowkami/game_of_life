/* Generated by Nim Compiler v0.18.0 */
/*   (c) 2017 Andreas Rumpf */
/* The generated code is subject to the original license. */
#ifndef __cal_gene__
#define __cal_gene__
#define NIM_NEW_MANGLING_RULES
#define NIM_INTBITS 64

#include "nimbase.h"
#undef LANGUAGE_C
#undef MIPSEB
#undef MIPSEL
#undef PPC
#undef R3000
#undef R4000
#undef i386
#undef linux
#undef mips
#undef near
#undef powerpc
#undef unix
typedef struct tySequence_qwqHTkRvwhrRyENtudHQ7g tySequence_qwqHTkRvwhrRyENtudHQ7g;
typedef struct TGenericSeq TGenericSeq;
struct TGenericSeq {
NI len;
NI reserved;
};
struct tySequence_qwqHTkRvwhrRyENtudHQ7g {
  TGenericSeq Sup;
  NI data[SEQ_DECL_SIZE];
};
N_NOCONV(void, signalHandler)(int sign);
N_NIMCALL(NI, getRefcount)(void* p);
N_LIB_IMPORT N_CDECL(tySequence_qwqHTkRvwhrRyENtudHQ7g*, next_generation)(NI* cells, NI cellsLen_0, NI height, NI width);
N_LIB_IMPORT N_CDECL(void, NimMain)(void);
#endif /* __cal_gene__ */
